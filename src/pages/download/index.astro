---
import Layout from '@layouts/PlainLayout.astro';
import DownloadSelection from './download-selection.svelte';
import LatestDownload from './latest-download.svelte';
import { withBase } from '@utils/path';
const READONLY_ACCESS_API_TOKEN = import.meta.env
  .PUBLIC_GITHUB_API_READONLY_TOKEN;

console.log('Fetching data using token:', READONLY_ACCESS_API_TOKEN);

const BASE_URL = 'https://api.github.com/repos/admscentre/mortar-release';
const RELEASES_URL = `${BASE_URL}/releases`;

let latestResponse = await fetch(`${RELEASES_URL}/latest`, {
  headers: {
    Authorization: `Bearer ${READONLY_ACCESS_API_TOKEN}`,
  },
});
let data = await latestResponse.json();

// If not found, try to fetch without the token
if (!Array.isArray(data) || data.length === 0) {
  console.log('No data found for latest release, trying without token...');
  latestResponse = await fetch(`${RELEASES_URL}/latest`);
  data = await latestResponse.json();
}

console.log('Fetch completed', data);

const latestRelease: Release = {
  tag: data.tag_name,
  name: data.name,
  published: data.published_at,
  url: data.html_url,
  assets: data.assets?.map((asset: any) => ({
    name: asset.name,
    downloadUrl: asset.browser_download_url,
    downloadCount: asset.download_count,
    size: asset.size,
  })),
};

let allResponse = await fetch(RELEASES_URL, {
  headers: {
    Authorization: `Bearer ${READONLY_ACCESS_API_TOKEN}`,
  },
});
let allData = await allResponse.json();

// If not found, try to fetch without the token
if (!Array.isArray(allData) || allData.length === 0) {
  console.log('No data found, trying without token...');
  allResponse = await fetch(RELEASES_URL);
  allData = await allResponse.json();
}

const allReleases: Release[] = allData?.map((release: any) => ({
  tag: release.tag_name,
  name: release.name,
  published: release.published_at,
  url: release.html_url,
  assets: release.assets?.map((asset: any) => ({
    name: asset.name,
    downloadUrl: asset.browser_download_url,
    downloadCount: asset.download_count,
    size: asset.size,
  })),
}));
---

<Layout class='p-8'>
  <div
    class='mx-auto w-fit flex flex-col gap-4 bg-black/10 p-8 rounded shadow-md shadow-zinc-700 backdrop-blur-md'
  >
    <div class='flex gap-2 w-full'>
      <h1>Download Mortar</h1>
      <a
        href={latestRelease.url}
        target='_blank'
        class='text-sm text-accent-500 my-4 px-2 py-1 size-fit'
      >
        {latestRelease.tag}
      </a>
    </div>
    <div class='flex flex-col gap-4'>
      <LatestDownload release={latestRelease} latest client:only />
    </div>

    <div>
      <p class='text-sm text-zinc-300'>
        Please make sure to check the
        <a
          href={withBase('/docs/user-guide/installation#installation-steps')}
          class='text-accent-600 hover:text-accent-800'
          target='_blank'
          rel='noopener noreferrer'
        >
          installation instructions
        </a> before proceeding with the download.
      </p>
    </div>

    <details class='flex flex-col'>
      <summary
        class='cursor-pointer text-lg font-semibold text-accent-600 hover:text-accent-800 transition-colors duration-300'
      >
        All Versions
      </summary>
      {
        allReleases.map((release) => (
          <DownloadSelection
            release={release}
            latest={release.tag === latestRelease.tag}
            client:only
          />
        ))
      }
    </details>
  </div>
</Layout>
